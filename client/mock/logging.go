// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/CyCoreSystems/ari (interfaces: Logging)

package mock

import (
	ari "github.com/CyCoreSystems/ari"
	gomock "github.com/golang/mock/gomock"
)

// Mock of Logging interface
type MockLogging struct {
	ctrl     *gomock.Controller
	recorder *_MockLoggingRecorder
}

// Recorder for MockLogging (not exported)
type _MockLoggingRecorder struct {
	mock *MockLogging
}

func NewMockLogging(ctrl *gomock.Controller) *MockLogging {
	mock := &MockLogging{ctrl: ctrl}
	mock.recorder = &_MockLoggingRecorder{mock}
	return mock
}

func (_m *MockLogging) EXPECT() *_MockLoggingRecorder {
	return _m.recorder
}

func (_m *MockLogging) Create(_param0 string, _param1 string) error {
	ret := _m.ctrl.Call(_m, "Create", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockLoggingRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Create", arg0, arg1)
}

func (_m *MockLogging) Delete(_param0 string) error {
	ret := _m.ctrl.Call(_m, "Delete", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockLoggingRecorder) Delete(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Delete", arg0)
}

func (_m *MockLogging) List() ([]ari.LogData, error) {
	ret := _m.ctrl.Call(_m, "List")
	ret0, _ := ret[0].([]ari.LogData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockLoggingRecorder) List() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "List")
}

func (_m *MockLogging) Rotate(_param0 string) error {
	ret := _m.ctrl.Call(_m, "Rotate", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockLoggingRecorder) Rotate(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Rotate", arg0)
}
