// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/CyCoreSystems/ari (interfaces: Sound)

package mock

import (
	ari "github.com/CyCoreSystems/ari"
	gomock "github.com/golang/mock/gomock"
)

// Mock of Sound interface
type MockSound struct {
	ctrl     *gomock.Controller
	recorder *_MockSoundRecorder
}

// Recorder for MockSound (not exported)
type _MockSoundRecorder struct {
	mock *MockSound
}

func NewMockSound(ctrl *gomock.Controller) *MockSound {
	mock := &MockSound{ctrl: ctrl}
	mock.recorder = &_MockSoundRecorder{mock}
	return mock
}

func (_m *MockSound) EXPECT() *_MockSoundRecorder {
	return _m.recorder
}

func (_m *MockSound) Data(_param0 string) (*ari.SoundData, error) {
	ret := _m.ctrl.Call(_m, "Data", _param0)
	ret0, _ := ret[0].(*ari.SoundData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSoundRecorder) Data(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Data", arg0)
}

func (_m *MockSound) Get(_param0 string) ari.SoundHandle {
	ret := _m.ctrl.Call(_m, "Get", _param0)
	ret0, _ := ret[0].(ari.SoundHandle)
	return ret0
}

func (_mr *_MockSoundRecorder) Get(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Get", arg0)
}

func (_m *MockSound) List(_param0 map[string]string) ([]ari.SoundHandle, error) {
	ret := _m.ctrl.Call(_m, "List", _param0)
	ret0, _ := ret[0].([]ari.SoundHandle)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSoundRecorder) List(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "List", arg0)
}
