// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/CyCoreSystems/ari (interfaces: Bridge)

package mock

import (
	ari "github.com/CyCoreSystems/ari"
	gomock "github.com/golang/mock/gomock"
)

// Mock of Bridge interface
type MockBridge struct {
	ctrl     *gomock.Controller
	recorder *_MockBridgeRecorder
}

// Recorder for MockBridge (not exported)
type _MockBridgeRecorder struct {
	mock *MockBridge
}

func NewMockBridge(ctrl *gomock.Controller) *MockBridge {
	mock := &MockBridge{ctrl: ctrl}
	mock.recorder = &_MockBridgeRecorder{mock}
	return mock
}

func (_m *MockBridge) EXPECT() *_MockBridgeRecorder {
	return _m.recorder
}

func (_m *MockBridge) AddChannel(_param0 string, _param1 string) error {
	ret := _m.ctrl.Call(_m, "AddChannel", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockBridgeRecorder) AddChannel(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "AddChannel", arg0, arg1)
}

func (_m *MockBridge) Data(_param0 string) (ari.BridgeData, error) {
	ret := _m.ctrl.Call(_m, "Data", _param0)
	ret0, _ := ret[0].(ari.BridgeData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockBridgeRecorder) Data(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Data", arg0)
}

func (_m *MockBridge) Delete(_param0 string) error {
	ret := _m.ctrl.Call(_m, "Delete", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockBridgeRecorder) Delete(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Delete", arg0)
}

func (_m *MockBridge) List() ([]*ari.BridgeHandle, error) {
	ret := _m.ctrl.Call(_m, "List")
	ret0, _ := ret[0].([]*ari.BridgeHandle)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockBridgeRecorder) List() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "List")
}

func (_m *MockBridge) Play(_param0 string, _param1 string, _param2 string) (*ari.PlaybackHandle, error) {
	ret := _m.ctrl.Call(_m, "Play", _param0, _param1, _param2)
	ret0, _ := ret[0].(*ari.PlaybackHandle)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockBridgeRecorder) Play(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Play", arg0, arg1, arg2)
}

func (_m *MockBridge) RemoveChannel(_param0 string, _param1 string) error {
	ret := _m.ctrl.Call(_m, "RemoveChannel", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockBridgeRecorder) RemoveChannel(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RemoveChannel", arg0, arg1)
}
